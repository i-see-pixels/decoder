[{"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\index.js":"1","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\category\\CategoryA.js":"2","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\category\\CategoryB.js":"3","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Home.js":"4","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\CreatePost.js":"5","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signup.js":"6","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Navbar.js":"7","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\ViewPost.js":"8","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\App.js":"9","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signin.js":"10"},{"size":506,"mtime":1606589227785,"results":"11","hashOfConfig":"12"},{"size":7104,"mtime":1607062150766,"results":"13","hashOfConfig":"12"},{"size":7104,"mtime":1607065851807,"results":"14","hashOfConfig":"12"},{"size":7402,"mtime":1607338318989,"results":"15","hashOfConfig":"12"},{"size":3092,"mtime":1607002844036,"results":"16","hashOfConfig":"12"},{"size":2802,"mtime":1606676060065,"results":"17","hashOfConfig":"12"},{"size":3172,"mtime":1607339334509,"results":"18","hashOfConfig":"12"},{"size":2067,"mtime":1607337870922,"results":"19","hashOfConfig":"12"},{"size":1312,"mtime":1607339328519,"results":"20","hashOfConfig":"12"},{"size":2551,"mtime":1606676280979,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1nf1v4q",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\index.js",[],["45","46"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\category\\CategoryA.js",["47"],"import react, { useEffect, useState } from 'react';\r\n\r\nfunction CategoryA()\r\n{\r\n    const [allThePosts,setAllThePosts]=useState([]);\r\n    const categoryName=\"A\";\r\n\r\n    useEffect(()=>{\r\n        fetch(`/allposts/${categoryName}`,{\r\n            method:\"get\",\r\n            headers:{\r\n                \"Authorization\" : \"Bearer \" + localStorage.getItem(\"jwt\") \r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            console.log(data)\r\n            setAllThePosts(data)\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n\r\n    function LikePost(postId)\r\n    {\r\n        fetch('/likepost',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\") \r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            console.log(data);\r\n            const newData=allThePosts.map(item=>{\r\n                if(item._id === data._id)\r\n                    return data;\r\n                else   \r\n                    return item;\r\n            })\r\n\r\n            setAllThePosts(newData);\r\n            // flag+=1;\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    function UnlikePost(postId)\r\n    {\r\n        fetch('/unlikepost',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            console.log(data);\r\n            // flag+=1;\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    function DeletePost(postId)\r\n    {\r\n        fetch(`/delete/${postId}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            console.log(data)\r\n            const newData=allThePosts.map(item=>{\r\n                    if(item._id !== data._id)\r\n                        return item\r\n                    return data\r\n            })\r\n            setAllThePosts(newData);\r\n            // flag+=1;\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    function makeComment(comment,postId)\r\n    {\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                commentBody:comment,\r\n                postId,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            // console.log(data);\r\n            const newData=allThePosts.map(item=>{\r\n                if(item._id === data._id)\r\n                    return data\r\n                else    \r\n                    return item\r\n            })\r\n            setAllThePosts(newData)\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    function ForkPost(postId)\r\n    {\r\n        fetch('/forkpost',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>this is Category A</h1>\r\n            {\r\n                allThePosts.map(item=>{\r\n                    // console.log(\"alltheposts\");\r\n                    // console.log(item)\r\n                    return(\r\n                        // <li><h2>{item.title}</h2></li>\r\n                        // <li><h2>{item.body}</h2></li>\r\n                        <div className=\"card\">\r\n                            <h2>{item.title}</h2>\r\n                            <h2>{item.body}</h2>\r\n                            <h4>{item.likes.length} likes</h4>\r\n\r\n                            <button \r\n                            className=\"btn\"\r\n                            onClick={()=>{\r\n                                LikePost(item._id)\r\n                            }}\r\n                            >Like</button>\r\n\r\n                            <button \r\n                            className=\"btn\"\r\n                            onClick={()=>{\r\n                                UnlikePost(item._id)\r\n                            }}\r\n                            >Unlike</button>\r\n                            \r\n                            <button \r\n                            className=\"btn\"\r\n                            onClick={()=>{\r\n                                DeletePost(item._id)\r\n                            }}\r\n                            >Delete</button>\r\n                            \r\n                            <button \r\n                            className=\"btn\"\r\n                            onClick={()=>{\r\n                                ForkPost(item._id)\r\n                            }}\r\n                            >Fork</button>\r\n\r\n                            <h4>Previous Comments</h4>\r\n                            <div>\r\n                                {\r\n                                    item.comments.map(userComment=>{\r\n                                        // console.log(userComment)\r\n                                        return(\r\n                                            <h6>\r\n                                                <span style={{fontWeight:\"600\"}}>{userComment.commentedBy.name}</span> {userComment.commentBody}\r\n                                            </h6>   \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                            <div>\r\n                                <form onSubmit={(e)=>{\r\n                                    makeComment(e.target[0].value , item._id);\r\n                                    e.preventDefault();     //when we submit forms, the page automatically gets reloaded\r\n                                }}>                         \r\n                                    <input                  //to prevent that reloading, we have used e.preventDefault()\r\n                                    type=\"text\"\r\n                                    placeholder=\"comments\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryA;","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\category\\CategoryB.js",["48"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Home.js",[],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\CreatePost.js",["49"],"// import { useState } from \"react\";\r\nimport React , {useState} from 'react';\r\nimport M from 'materialize-css';\r\n\r\nfunction CreatePost()\r\n{\r\n    const [title,setTitle]=useState(\"\");\r\n    const [body,setBody]=useState(\"\");\r\n    const [pic,setPic]=useState(\"\")\r\n    const [category,setCategory]=useState(\"\");\r\n\r\n    function PostData()\r\n    {\r\n        fetch('/createpost',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                title,\r\n                body,\r\n                pic,\r\n                category,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            console.log(data);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"mycard\">\r\n                <div className=\"card auth-card\">\r\n                    <input\r\n                    type=\"text\"\r\n                    value={title}\r\n                    placeholder=\"Title\"\r\n                    onChange={\r\n                        function(event)\r\n                        {\r\n                            setTitle(event.target.value);\r\n                        }\r\n                    }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"card auth-card\">\r\n                    <input\r\n                    type=\"text\"\r\n                    value={body}\r\n                    placeholder=\"Body\"\r\n                    onChange={\r\n                        function(event)\r\n                        {\r\n                            setBody(event.target.value);\r\n                        }\r\n                    }\r\n                    />\r\n                </div>\r\n                <div className=\"card auth-card\">\r\n                    <input\r\n                    type=\"file\"\r\n                    value={pic}\r\n                    placeholder=\"Picture\"\r\n                    onChange={\r\n                        function(event)\r\n                        {\r\n                            console.log(event.target.value)\r\n                            // setPic(event.target.files);\r\n                            setPic(event.target.value);\r\n                        }\r\n                    }\r\n                    />\r\n                </div>\r\n                <div className=\"card auth-card\">\r\n                    {/* need to put dropdown list here */}\r\n                    <input \r\n                    type=\"text\"\r\n                    value={category}\r\n                    placeholder=\"category\"\r\n                    onChange={(event)=>{\r\n                        console.log(event.target.value)\r\n                        setCategory(event.target.value)\r\n                    }}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <button \r\n            className=\"btn\"\r\n            onClick={()=>{\r\n                PostData();\r\n            }}\r\n            >\r\n                Post\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost;","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signup.js",[],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Navbar.js",["50","51","52","53","54"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\ViewPost.js",["55"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\App.js",[],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signin.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},{"ruleId":"60","severity":1,"message":"61","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},{"ruleId":"60","severity":1,"message":"64","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":9},{"ruleId":"60","severity":1,"message":"65","line":27,"column":15,"nodeType":"62","messageId":"63","endLine":27,"endColumn":24},{"ruleId":"66","severity":1,"message":"67","line":37,"column":42,"nodeType":"68","endLine":37,"endColumn":162},{"ruleId":"66","severity":1,"message":"67","line":44,"column":60,"nodeType":"68","endLine":44,"endColumn":93},{"ruleId":"66","severity":1,"message":"67","line":45,"column":60,"nodeType":"68","endLine":45,"endColumn":93},{"ruleId":"69","severity":1,"message":"70","line":47,"column":60,"nodeType":"71","endLine":47,"endColumn":80},{"ruleId":"60","severity":1,"message":"61","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'M' is defined but never used.","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]