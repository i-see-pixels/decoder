[{"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\index.js":"1","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\category\\CategoryA.js":"2","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\category\\CategoryB.js":"3","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Home.js":"4","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\CreatePost.js":"5","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signup.js":"6","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Navbar.js":"7","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\ViewPost.js":"8","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\App.js":"9","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signin.js":"10","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\ForkedPost.js":"11","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Reducer.js":"12","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\category\\CategoryC.js":"13","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\NewHome.js":"14"},{"size":506,"mtime":1606589227785,"results":"15","hashOfConfig":"16"},{"size":11100,"mtime":1608057401377,"results":"17","hashOfConfig":"16"},{"size":11100,"mtime":1608057466133,"results":"18","hashOfConfig":"16"},{"size":13260,"mtime":1608491263510,"results":"19","hashOfConfig":"16"},{"size":3179,"mtime":1607538423867,"results":"20","hashOfConfig":"16"},{"size":2859,"mtime":1607538704335,"results":"21","hashOfConfig":"16"},{"size":4916,"mtime":1608057899425,"results":"22","hashOfConfig":"16"},{"size":2067,"mtime":1607337870922,"results":"23","hashOfConfig":"16"},{"size":2373,"mtime":1607413864820,"results":"24","hashOfConfig":"16"},{"size":2771,"mtime":1607538547935,"results":"25","hashOfConfig":"16"},{"size":3635,"mtime":1607493691710,"results":"26","hashOfConfig":"16"},{"size":407,"mtime":1607428250779,"results":"27","hashOfConfig":"16"},{"size":11100,"mtime":1608057505132,"results":"28","hashOfConfig":"16"},{"size":12498,"mtime":1608060623876,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1nf1v4q",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\index.js",[],["64","65"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\category\\CategoryA.js",["66"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\category\\CategoryB.js",["67"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Home.js",["68","69","70"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\CreatePost.js",["71"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signup.js",[],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Navbar.js",["72","73","74","75"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\ViewPost.js",["76"],"import react, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../Toolbar.css';\r\n\r\nfunction ViewPost()\r\n{\r\n    const {postId}=useParams();\r\n    // console.log(postId)\r\n\r\n    const [postData,setPostData]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        fetch(`/getPost/${postId}`,{\r\n            method:\"get\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            // console.log(data.likes.length)\r\n            // console.log(typeof(data.likes))\r\n            console.log(data)\r\n            setPostData(data)\r\n            // console.log(postData.comments.length)\r\n            // console.log(typeof(postData.comments))\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    },[postId])\r\n\r\n\r\n    return(\r\n        <div>\r\n            {                                               // did this so that when postData will be available\r\n                postData?                                   // only then the further components can be accessed\r\n                <div className=\"formatDedicatedPost\">                                     \r\n                    <h1>{postData.title}</h1>\r\n                    <h3>{postData.body}</h3>\r\n                    <h5>{postData.likes.length} likes</h5>\r\n                    <div>\r\n                        {\r\n                            postData.comments.map(userComment=>{\r\n                                return(\r\n                                    <h6>\r\n                                        <span style={{fontWeight:\"600\"}}>{userComment.commentedBy.name}</span> {userComment.commentBody}\r\n                                    </h6>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                :\r\n                <h1>! loading  </h1>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewPost;",["77","78"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\App.js",["79"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signin.js",["80"],"import React, {useState, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { UserContext } from '../App'\r\nimport classes from './Signin.module.css'\r\n\r\nfunction Signin()\r\n{\r\n    // const [name,setName]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    const [email,setEmail]=useState(\"\");\r\n    const history=useHistory();\r\n    const {state,dispatch}=useContext(UserContext);\r\n\r\n    function PostData()\r\n    {\r\n        // const history=useHistory();\r\n        fetch('/signin',{\r\n            method:\"post\",\r\n            headers:\r\n            {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            if(data.error)\r\n            {\r\n                console.log(\"error \");\r\n                console.log(data.error);\r\n            }\r\n            else\r\n            {\r\n                localStorage.setItem(\"jwt\",data.token);\r\n                localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n                dispatch({type:\"USER\",payload:data.user})\r\n                console.log(\"signed in successfully\");\r\n                history.push(\"/\");\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            <div>\r\n                <div className={classes.input}>\r\n                    <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={\r\n                        function(event)\r\n                        {\r\n                            // console.log(event)\r\n                            // console.log(event.target.value)\r\n                            setEmail(event.target.value);\r\n                        }\r\n                    }\r\n                    />\r\n                </div>  \r\n                <div className={classes.input}>\r\n                    <input\r\n                    type=\"text\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={\r\n                        function(event)\r\n                        {\r\n                            // console.log(event)\r\n                            // console.log(event.target.value)\r\n                            setPassword(event.target.value);\r\n                        }\r\n                    }\r\n                    />\r\n                </div>  \r\n            </div>\r\n            <button \r\n            className={classes.button}\r\n            onClick={()=>PostData()}>Login</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signin;","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\ForkedPost.js",["81"],"import react, { useEffect, useState, useContext } from 'react';\r\nimport {UserContext} from '../App'\r\n\r\nfunction ForkedPost()\r\n{\r\n    const [myforks,setMyforks]=useState([]);\r\n    const {state,dispatch}=useContext(UserContext)\r\n\r\n    useEffect(()=>{\r\n        fetch('/getforkpost',{\r\n            method:\"get\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            // console.log(data);\r\n            setMyforks(data)\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n\r\n    function UnforkPost(postId)\r\n    {\r\n        fetch('/unforkpost',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            // console.log(data)\r\n            // console.log(\"unforked successfully\")\r\n            dispatch({type:\"FORK\" , payload : data.forkedPost})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                myforks.map(item=>{\r\n                    return(\r\n                        <div className=\"card\">\r\n                            <h1>{item.title}</h1>\r\n                            <h2>{item.body}</h2>\r\n                            <h5>{item.likes.length} likes</h5>\r\n\r\n                            {/* <button \r\n                            className=\"btn\"\r\n                            onClick={()=>{\r\n                                UnforkPost(item._id)\r\n                            }}>\r\n                                Unfork\r\n                            </button> */}\r\n\r\n                            {\r\n                                state\r\n                                ?\r\n                                    state.forkedPost.some(({_id})=>_id === item._id)\r\n                                    ?\r\n                                    <button \r\n                                    className=\"btn\"\r\n                                    onClick={()=>{\r\n                                        // console.log(\"yes\");\r\n                                        UnforkPost(item._id)\r\n                                    }}\r\n                                    >UnFork</button>\r\n                                    :\r\n                                    <h6> </h6>\r\n                                :\r\n                                <h5> !! loading </h5>\r\n                            }\r\n\r\n                            <div>\r\n                                {\r\n                                    item.comments.map(userComment=>{\r\n                                        // console.log(userComment)\r\n                                        return(\r\n                                            <h6>\r\n                                                <span style={{fontWeight:\"600\"}}>{userComment.commentedBy.name}</span> {userComment.commentBody}\r\n                                            </h6>   \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            <h1>Forked page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForkedPost;","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Reducer.js",[],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\category\\CategoryC.js",["82"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\NewHome.js",["83","84","85"],"import React, { useEffect, useState , useContext} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {UserContext} from '../App'\r\n\r\nfunction NewHome()\r\n{\r\n    const {state,dispatch}=useContext(UserContext)\r\n    const [allThePosts,setAllThePosts]=useState([]);\r\n    // var flag=1;\r\n    // console.log(state)\r\n    var first=0;\r\n    var second=0;\r\n    var third=0;\r\n\r\n    useEffect(()=>{\r\n        fetch('/allposts',{\r\n            // method:\"get\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{                         // this is an array\r\n            // console.log(typeof(data));\r\n            // setAllThePosts(data);\r\n            // const newData=data.map(item=>{\r\n\r\n            // })\r\n\r\n            for(var i=0; i<data.length; ++i)\r\n            {\r\n                if( data[i].likes.length > data[first].likes.length )\r\n                {\r\n                    third=second;\r\n                    second=first;\r\n                    first=i;\r\n                }\r\n                else if( data[i].likes.length > data[second].likes.length )\r\n                {\r\n                    third=second;\r\n                    second=i;\r\n                }\r\n                else\r\n                {\r\n                    third=i;\r\n                }\r\n            }\r\n            var newData=[];\r\n            newData.push(data[first]);\r\n            newData.push(data[second]);\r\n            newData.push(data[third]);\r\n\r\n            setAllThePosts(newData);\r\n\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    },[])\r\n\r\n    function LikePost(postId)\r\n    {\r\n        fetch('/likepost',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\") \r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            console.log(data);\r\n            const newData=allThePosts.map(item=>{\r\n                if(item._id === data._id)\r\n                    return data;\r\n                else   \r\n                    return item;\r\n            })\r\n\r\n            setAllThePosts(newData);\r\n            // flag+=1;\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    function UnlikePost(postId)\r\n    {\r\n        fetch('/unlikepost',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            console.log(data);\r\n            const newData=allThePosts.map(item=>{\r\n                if(item._id === data._id)\r\n                    return data;\r\n                else   \r\n                    return item;\r\n            })\r\n\r\n            setAllThePosts(newData);\r\n            // flag+=1;\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    function DeletePost(postId)\r\n    {\r\n        fetch(`/delete/${postId}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            console.log(data)\r\n            const newData=allThePosts.map(item=>{\r\n                    if(item._id !== data._id)\r\n                        return item\r\n                    return data\r\n            })\r\n            setAllThePosts(newData);\r\n            // flag+=1;\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    function makeComment(comment,postId)\r\n    {\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                commentBody:comment,\r\n                postId,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            // console.log(data);\r\n            const newData=allThePosts.map(item=>{\r\n                if(item._id === data._id)\r\n                    return data\r\n                else    \r\n                    return item\r\n            })\r\n            setAllThePosts(newData)\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    function ForkPost(postId)\r\n    {\r\n        fetch('/forkpost',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            // console.log(data.forkedPost)\r\n            // console.log(\"state before \",state);\r\n            dispatch({type:\"FORK\" , payload : data.forkedPost})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            // console.log(\"state after \",state);\r\n        })\r\n    }\r\n\r\n    function UnForkPost(postId)\r\n    {\r\n        fetch('/unforkpost',{\r\n                method:\"put\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    postId,\r\n                })\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                // console.log(data.forkedPost)\r\n                dispatch({type:\"FORK\" , payload : data.forkedPost})\r\n                localStorage.setItem(\"user\",JSON.stringify(data))\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>this is new Home</h1>\r\n            {\r\n                allThePosts.map(item=>{\r\n                    return(\r\n                        // console.log(item),\r\n\r\n                        // body: \"d\"\r\n                        // category: \"C\"\r\n                        // comments: []\r\n                        // likes: []\r\n                        // pic: \"C:\\fakepath\\wallhaven-42qee6_1366x768.png\"\r\n                        // postedby: {_id: \"5fc9dbfa24626d26b8296d32\", name: \"y\"}\r\n                        // title: \"d\"\r\n                        // __v: 0\r\n                        // _id: \"5fc9e12024626d26b8296d33\"\r\n                        // __proto__: Object\r\n\r\n                        <div className=\"card\">\r\n                            <Link to={\"/viewpost/\" + item._id }><h2>{item.title}</h2></Link>\r\n                            {/* <h2>{item._id}</h2> */}\r\n                            <h2>{item.body}</h2>\r\n                            <h4>{item.likes.length} likes</h4>\r\n\r\n                            <div>\r\n                            {\r\n                                item.likes.includes(state._id)\r\n                                ?\r\n                                    <button \r\n                                    className=\"btn\"\r\n                                    onClick={()=>{\r\n                                        UnlikePost(item._id)\r\n                                    }}\r\n                                    >Unlike</button>\r\n                                :\r\n                                    <button \r\n                                    className=\"btn\"\r\n                                    onClick={()=>{\r\n                                        LikePost(item._id)\r\n                                    }}\r\n                                    >Like</button>\r\n\r\n                            }\r\n\r\n                            {\r\n                                item.postedby._id === state._id\r\n                                &&\r\n                                <button \r\n                                className=\"btn\"\r\n                                onClick={()=>{\r\n                                DeletePost(item._id)\r\n                                }}\r\n                                >Delete</button>\r\n                            }\r\n \r\n                            {\r\n                                \r\n                                state\r\n                                ?\r\n                                    // \r\n                                    state.forkedPost.some(({_id})=>_id === item._id)\r\n                                    ?\r\n                                    <button \r\n                                    className=\"btn\"\r\n                                    onClick={()=>{\r\n                                        // console.log(\"yes\");\r\n                                        UnForkPost(item._id)\r\n                                    }}\r\n                                    >UnFork</button>\r\n                                    :\r\n                                    <button \r\n                                    className=\"btn\"\r\n                                    onClick={()=>{\r\n                                        ForkPost(item._id)\r\n                                    }}\r\n                                    >Fork</button>\r\n\r\n                                :\r\n\r\n                                <h5> loading </h5>\r\n\r\n                            }\r\n\r\n                            {/* {\r\n                                state.forkedPost.includes(item._id)\r\n                                ?\r\n                                <button \r\n                                className=\"btn\"\r\n                                onClick={()=>{\r\n                                    UnForkPost(item._id)\r\n                                }}\r\n                                >UnFork</button>\r\n                                :\r\n                                <button \r\n                                className=\"btn\"\r\n                                onClick={()=>{\r\n                                    ForkPost(item._id)\r\n                                }}\r\n                                >Fork</button>\r\n                            }  */}\r\n\r\n                            {/* <button \r\n                            className=\"btn\"\r\n                            onClick={()=>{\r\n                                ForkPost(item._id)\r\n                            }}\r\n                            >Fork</button>\r\n                            \r\n                            <button \r\n                            className=\"btn\"\r\n                            onClick={()=>{\r\n                                UnForkPost(item._id)\r\n                            }}\r\n                            >Un Fork</button> */}\r\n\r\n\r\n\r\n                            </div>\r\n                            {/* <h4>Previous Comments</h4> */}\r\n                            <div>\r\n                                {\r\n                                    item.comments.map(userComment=>{\r\n                                        // console.log(userComment)\r\n                                        return(\r\n                                            <h6>\r\n                                                <span style={{fontWeight:\"600\"}}>{userComment.commentedBy.name}</span> {userComment.commentBody}\r\n                                            </h6>   \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                            <div>\r\n                                <form onSubmit={(e)=>{\r\n                                    makeComment(e.target[0].value , item._id);\r\n                                    e.preventDefault();     //when we submit forms, the page automatically gets reloaded\r\n                                }}>                         \r\n                                    <input                  //to prevent that reloading, we have used e.preventDefault()\r\n                                    type=\"text\"\r\n                                    placeholder=\"comments\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewHome;\r\n",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":193,"column":21,"nodeType":"96","endLine":193,"endColumn":57},{"ruleId":"94","severity":1,"message":"95","line":198,"column":21,"nodeType":"96","endLine":198,"endColumn":57},{"ruleId":"94","severity":1,"message":"95","line":202,"column":21,"nodeType":"96","endLine":202,"endColumn":57},{"ruleId":"90","severity":1,"message":"97","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":9},{"ruleId":"98","severity":1,"message":"99","line":46,"column":54,"nodeType":"96","endLine":46,"endColumn":87},{"ruleId":"98","severity":1,"message":"99","line":47,"column":54,"nodeType":"96","endLine":47,"endColumn":87},{"ruleId":"100","severity":1,"message":"101","line":48,"column":54,"nodeType":"102","endLine":48,"endColumn":74},{"ruleId":"98","severity":1,"message":"99","line":70,"column":42,"nodeType":"96","endLine":70,"endColumn":162},{"ruleId":"90","severity":1,"message":"91","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"86","replacedBy":"103"},{"ruleId":"88","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":40,"column":5,"nodeType":"107","endLine":40,"endColumn":7,"suggestions":"108"},{"ruleId":"90","severity":1,"message":"109","line":12,"column":12,"nodeType":"92","messageId":"93","endLine":12,"endColumn":17},{"ruleId":"90","severity":1,"message":"91","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"105","severity":1,"message":"110","line":34,"column":27,"nodeType":"92","endLine":34,"endColumn":33},{"ruleId":"105","severity":1,"message":"111","line":35,"column":28,"nodeType":"92","endLine":35,"endColumn":33},{"ruleId":"105","severity":1,"message":"112","line":36,"column":27,"nodeType":"92","endLine":36,"endColumn":28},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'M' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["113"],["114"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'state'. Either include them or remove the dependency array.","ArrayExpression",["115"],"'state' is assigned a value but never used.","Assignments to the 'third' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'second' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'first' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [dispatch, history, state]",{"range":"118","text":"119"},[1270,1272],"[dispatch, history, state]"]