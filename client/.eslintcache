[{"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\index.js":"1","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signup.js":"2","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\CreatePost.js":"3","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\ForkedPost.js":"4","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signin.js":"5","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Home.js":"6","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Navbar.js":"7","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\MainFooter.js":"8","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Footer.js":"9","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Reducer.js":"10","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\blog.js":"11"},{"size":508,"mtime":1608660822838,"results":"12","hashOfConfig":"13"},{"size":2989,"mtime":1608746005357,"results":"14","hashOfConfig":"13"},{"size":4895,"mtime":1608797579329,"results":"15","hashOfConfig":"13"},{"size":3295,"mtime":1608795357912,"results":"16","hashOfConfig":"13"},{"size":3145,"mtime":1608747775941,"results":"17","hashOfConfig":"13"},{"size":14108,"mtime":1608747135163,"results":"18","hashOfConfig":"13"},{"size":4636,"mtime":1609584051293,"results":"19","hashOfConfig":"13"},{"size":2857,"mtime":1609582687045,"results":"20","hashOfConfig":"13"},{"size":2604,"mtime":1608636152465,"results":"21","hashOfConfig":"13"},{"size":407,"mtime":1607428250779,"results":"22","hashOfConfig":"13"},{"size":12828,"mtime":1609582452335,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1nf1v4q",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\index.js",[],["51","52"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signup.js",[],["53","54"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\CreatePost.js",["55"],"// import { useState } from \"react\";\r\nimport React , {useEffect, useState} from 'react';\r\nimport M from 'materialize-css';\r\nimport classes from './CreatePost.module.css'\r\nimport Spinner from './spinner';\r\n\r\nfunction CreatePost()\r\n{\r\n    const [title,setTitle]=useState(\"\");\r\n    const [body,setBody]=useState(\"\");\r\n    const [pic,setPic]=useState(\"\")\r\n    const [picurl,setPicurl]=useState(\"\");\r\n    const [category,setCategory]=useState(\"\");\r\n    const [loading,setLoading]=useState(false);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(picurl)\r\n        {\r\n            console.log(\"picurl=\",picurl)\r\n            fetch('/createpost',{\r\n                method:\"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    picurl,\r\n                    category,\r\n                })\r\n            })\r\n            .then(res=>res.json())\r\n            .then((data)=>{\r\n                console.log(data);\r\n                setLoading(false)\r\n                M.toast({html:'Post created successfully',classes:'#ce93d8 purple', displayLength:2000});\r\n            })\r\n        }\r\n    },[picurl])\r\n\r\n    function PostImageOnCloud() \r\n    {\r\n        setLoading(true);\r\n        const data=new FormData();\r\n        data.append('file',pic);\r\n        data.append('upload_preset','insta-clone')\r\n        data.append('cloud_name','vikash0901');\r\n\r\n        fetch('https://api.cloudinary.com/v1_1/vikash0901/image/upload',{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data);\r\n            setPicurl(data.url)\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    /*function PostData()\r\n    {\r\n        fetch('/createpost',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                title,\r\n                body,\r\n                pic,\r\n                category,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            console.log(data);\r\n        })\r\n    }*/\r\n\r\n    return(\r\n        <div className={classes.main}>\r\n            <div style={{textAlign:\"center\"}}>\r\n                <div className={classes.input}>\r\n                    <input\r\n                    type=\"text\"\r\n                    value={title}\r\n                    placeholder=\"Title\"\r\n                    onChange={\r\n                        function(event)\r\n                        {\r\n                            setTitle(event.target.value);\r\n                        }\r\n                    }\r\n                    />\r\n                </div>\r\n\r\n                <div className={classes.input}>\r\n                    <input\r\n                    type=\"text\"\r\n                    value={body}\r\n                    placeholder=\"Body\"\r\n                    onChange={\r\n                        function(event)\r\n                        {\r\n                            setBody(event.target.value);\r\n                        }\r\n                    }\r\n                    />\r\n                </div>\r\n                <div className={classes.input}>\r\n                    <input\r\n                    type=\"file\"\r\n                    placeholder=\"Picture\"\r\n                    onChange={\r\n                        function(event)\r\n                        {\r\n                            console.log(event.target.files[0])\r\n                            setPic(event.target.files[0]);\r\n                            // setPic(event.target.value);\r\n                        }\r\n                    }\r\n                    />\r\n                </div>\r\n                <div className={classes.input}>\r\n                    {/* need to put dropdown list here */}\r\n                    <input \r\n                    type=\"text\"\r\n                    value={category}\r\n                    placeholder=\"category\"\r\n                    onChange={(event)=>{\r\n                        console.log(event.target.value)\r\n                        setCategory(event.target.value)\r\n                    }}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <button \r\n            className={classes.button}\r\n            onClick={()=>{\r\n                PostImageOnCloud();\r\n                \r\n            }}\r\n            disabled={loading}\r\n            >\r\n               {\r\n                   loading?\r\n                   <Spinner/>\r\n                   :\r\n                   <h3>Post</h3>\r\n               }\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost;","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\ForkedPost.js",["56","57","58","59"],"import react, { useEffect, useState, useContext } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {UserContext} from '../App'\r\n\r\nfunction ForkedPost()\r\n{\r\n    const [myforks,setMyforks]=useState([]);\r\n    const {state,dispatch}=useContext(UserContext)\r\n    const history=useHistory();\r\n\r\n    useEffect(()=>{\r\n        fetch('/getforkpost',{\r\n            method:\"get\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            // console.log(data);\r\n            setMyforks(data)\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n\r\n    function UnforkPost(postId)\r\n    {\r\n        fetch('/unforkpost',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            dispatch({type:\"FORK\" , payload : data.forkedPost})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            window.location.reload();\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                <h1>All your forked posts appear here</h1>,\r\n                myforks.map(item=>{\r\n                    return(\r\n                        <div className=\"card\">\r\n                            <h1>{item.title}</h1>\r\n                            <img src={item.pic}/>\r\n                            <h2>{item.body}</h2>\r\n                            <h4>{item.likes.length} likes</h4>\r\n\r\n                            {\r\n                                state\r\n                                ?\r\n                                    state.forkedPost.some(({_id})=>_id === item._id)\r\n                                    ?\r\n                                    <i className=\"small material-icons\" title='Unfork this post' onClick={()=>{\r\n                                        UnforkPost(item._id)\r\n                                    }} style={{cursor:'pointer'}}>highlight_off</i>\r\n                                    :\r\n                                    <h6> </h6>\r\n                                :\r\n                                <h5> !! loading </h5>\r\n                            }\r\n\r\n                            <div>\r\n                                {\r\n                                    item.comments.map(userComment=>{\r\n                                        return(\r\n                                            <h4>\r\n                                                <span style={{fontWeight:\"700\"}}>{userComment.commentedBy.name}</span> {userComment.commentBody}\r\n                                            </h4>   \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            <h1>Forked page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForkedPost;","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signin.js",["60"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Home.js",["61","62","63","64","65","66","67","68","69"],"import React, { useEffect, useState , useContext} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {UserContext} from '../App'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Car from '../Carousel/Carousel'\r\nimport Item from '../Carousel/Item'\r\nfunction Home()\r\n{\r\n    \r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"image\">\r\n                <img className=\"img\"src=\"https://www.awarenessdays.com/wp-content/uploads/2018/09/pride-flag.png\" alt=\"\" />      \r\n            </div>\r\n           <Car></Car>\r\n           <div class=\"parent-flex\">\r\n               {/* <p className=\"Flextext\">Popular articles</p> */}\r\n         <div class=\"flex-item\"></div>\r\n          <div class=\"flex-item\"></div>\r\n         <div class=\"flex-item\"></div>\r\n           </div>\r\n            <Car>\r\n            <Item><img src=\"https://bit.ly/2KHkuic\" /> </Item>  \r\n            <Item><img src=\"https://bit.ly/2KHkuic\" /> </Item>  \r\n            <Item><img src=\"https://bit.ly/2KHkuic\" /> </Item>  \r\n            </Car>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n// const {state,dispatch}=useContext(UserContext)\r\n//     const [allThePosts,setAllThePosts]=useState([]);\r\n//     // var flag=1;\r\n//     // console.log(state)\r\n\r\n//     useEffect(()=>{\r\n//         fetch('/allposts',{\r\n//             // method:\"get\",\r\n//             headers:{\r\n//                 \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n//             }\r\n//         })\r\n//         .then(res=>res.json())\r\n//         .then((data)=>{                         // this is an array\r\n//             // console.log(typeof(data));\r\n//             setAllThePosts(data);\r\n//         })\r\n//         .catch((err)=>{\r\n//             console.log(err);\r\n//         })\r\n//     },[])\r\n\r\n//     function LikePost(postId)\r\n//     {\r\n//         fetch('/likepost',{\r\n//             method:\"put\",\r\n//             headers:{\r\n//                 \"Content-Type\":\"application/json\",\r\n//                 \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\") \r\n//             },\r\n//             body:JSON.stringify({\r\n//                 postId,\r\n//             })\r\n//         })\r\n//         .then(res=>res.json())\r\n//         .then((data)=>{\r\n//             console.log(data);\r\n//             const newData=allThePosts.map(item=>{\r\n//                 if(item._id === data._id)\r\n//                     return data;\r\n//                 else   \r\n//                     return item;\r\n//             })\r\n\r\n//             setAllThePosts(newData);\r\n//             // flag+=1;\r\n//         })\r\n//         .catch((err)=>{\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n\r\n//     function UnlikePost(postId)\r\n//     {\r\n//         fetch('/unlikepost',{\r\n//             method:\"put\",\r\n//             headers:{\r\n//                 \"Content-Type\":\"application/json\",\r\n//                 \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n//             },\r\n//             body:JSON.stringify({\r\n//                 postId,\r\n//             })\r\n//         })\r\n//         .then(res=>res.json())\r\n//         .then((data)=>{\r\n//             console.log(data);\r\n//             const newData=allThePosts.map(item=>{\r\n//                 if(item._id === data._id)\r\n//                     return data;\r\n//                 else   \r\n//                     return item;\r\n//             })\r\n\r\n//             setAllThePosts(newData);\r\n//             // flag+=1;\r\n//         })\r\n//         .catch((err)=>{\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n\r\n//     function DeletePost(postId)\r\n//     {\r\n//         fetch(`/delete/${postId}`,{\r\n//             method:\"delete\",\r\n//             headers:{\r\n//                 \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n//             }\r\n//         })\r\n//         .then(res=>res.json())\r\n//         .then((data)=>{\r\n//             console.log(data)\r\n//             const newData=allThePosts.map(item=>{\r\n//                     if(item._id !== data._id)\r\n//                         return item\r\n//                     return data\r\n//             })\r\n//             setAllThePosts(newData);\r\n//             // flag+=1;\r\n//         })\r\n//         .catch((err)=>{\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n\r\n//     function makeComment(comment,postId)\r\n//     {\r\n//         fetch('/comment',{\r\n//             method:\"put\",\r\n//             headers:{\r\n//                 \"Content-Type\":\"application/json\",\r\n//                 \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n//             },\r\n//             body:JSON.stringify({\r\n//                 commentBody:comment,\r\n//                 postId,\r\n//             })\r\n//         })\r\n//         .then(res=>res.json())\r\n//         .then((data)=>{\r\n//             // console.log(data);\r\n//             const newData=allThePosts.map(item=>{\r\n//                 if(item._id === data._id)\r\n//                     return data\r\n//                 else    \r\n//                     return item\r\n//             })\r\n//             setAllThePosts(newData)\r\n//         })\r\n//         .catch((err)=>{\r\n//             console.log(err)\r\n//         })\r\n//     }\r\n\r\n//     function ForkPost(postId)\r\n//     {\r\n//         fetch('/forkpost',{\r\n//             method:\"put\",\r\n//             headers:{\r\n//                 \"Content-Type\":\"application/json\",\r\n//                 \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n//             },\r\n//             body:JSON.stringify({\r\n//                 postId,\r\n//             })\r\n//         })\r\n//         .then(res=>res.json())\r\n//         .then(data=>{\r\n//             // console.log(data.forkedPost)\r\n//             // console.log(\"state before \",state);\r\n//             dispatch({type:\"FORK\" , payload : data.forkedPost})\r\n//             localStorage.setItem(\"user\",JSON.stringify(data))\r\n//             // console.log(\"state after \",state);\r\n//         })\r\n//     }\r\n\r\n//     function UnForkPost(postId)\r\n//     {\r\n//         fetch('/unforkpost',{\r\n//                 method:\"put\",\r\n//                 headers:{\r\n//                     \"Content-Type\":\"application/json\",\r\n//                     \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n//                 },\r\n//                 body:JSON.stringify({\r\n//                     postId,\r\n//                 })\r\n//             })\r\n//             .then(res=>res.json())\r\n//             .then(data=>{\r\n//                 // console.log(data.forkedPost)\r\n//                 dispatch({type:\"FORK\" , payload : data.forkedPost})\r\n//                 localStorage.setItem(\"user\",JSON.stringify(data))\r\n//             })\r\n//     }\r\n\r\n//                 <li><Link to=\"/categoryA\">CategoryA</Link></li>\r\n//                 <li><Link to=\"/categoryB\">CategoryB</Link></li>\r\n//                 <li><Link to=\"/categoryC\">CategoryC</Link></li>\r\n//                 {\r\n//                     allThePosts.map(item=>{\r\n//                         return(\r\n//                             // console.log(item),\r\n\r\n//                             // body: \"d\"\r\n//                             // category: \"C\"\r\n//                             // comments: []\r\n//                             // likes: []\r\n//                             // pic: \"C:\\fakepath\\wallhaven-42qee6_1366x768.png\"\r\n//                             // postedby: {_id: \"5fc9dbfa24626d26b8296d32\", name: \"y\"}\r\n//                             // title: \"d\"\r\n//                             // __v: 0\r\n//                             // _id: \"5fc9e12024626d26b8296d33\"\r\n//                             // __proto__: Object\r\n\r\n//                             <div className=\"card\">\r\n//                                 <Link to={\"/viewpost/\" + item._id }><h2>{item.title}</h2></Link>\r\n//                                 {/* <h2>{item._id}</h2> */}\r\n//                                 <h2>{item.body}</h2>\r\n//                                 <h4>{item.likes.length} likes</h4>\r\n\r\n//                                 <div>\r\n//                                 {\r\n//                                     item.likes.includes(state._id)\r\n//                                     ?\r\n//                                         <button \r\n//                                         className=\"btn\"\r\n//                                         onClick={()=>{\r\n//                                             UnlikePost(item._id)\r\n//                                         }}\r\n//                                         >Unlike</button>\r\n//                                     :\r\n//                                         <button \r\n//                                         className=\"btn\"\r\n//                                         onClick={()=>{\r\n//                                             LikePost(item._id)\r\n//                                         }}\r\n//                                         >Like</button>\r\n\r\n//                                 }\r\n\r\n//                                 {\r\n//                                     item.postedby._id === state._id\r\n//                                     &&\r\n//                                     <button \r\n//                                     className=\"btn\"\r\n//                                     onClick={()=>{\r\n//                                     DeletePost(item._id)\r\n//                                     }}\r\n//                                     >Delete</button>\r\n//                                 }\r\n    \r\n//                                 {\r\n                                    \r\n//                                     state\r\n//                                     ?\r\n//                                         // \r\n//                                         state.forkedPost.some(({_id})=>_id === item._id)\r\n//                                         ?\r\n//                                         <button \r\n//                                         className=\"btn\"\r\n//                                         onClick={()=>{\r\n//                                             // console.log(\"yes\");\r\n//                                             UnForkPost(item._id)\r\n//                                         }}\r\n//                                         >UnFork</button>\r\n//                                         :\r\n//                                         <button \r\n//                                         className=\"btn\"\r\n//                                         onClick={()=>{\r\n//                                             ForkPost(item._id)\r\n//                                         }}\r\n//                                         >Fork</button>\r\n\r\n//                                     :\r\n\r\n//                                     <h5> loading </h5>\r\n\r\n//                                 }\r\n\r\n//                                 {/* {\r\n//                                     state.forkedPost.includes(item._id)\r\n//                                     ?\r\n//                                     <button \r\n//                                     className=\"btn\"\r\n//                                     onClick={()=>{\r\n//                                         UnForkPost(item._id)\r\n//                                     }}\r\n//                                     >UnFork</button>\r\n//                                     :\r\n//                                     <button \r\n//                                     className=\"btn\"\r\n//                                     onClick={()=>{\r\n//                                         ForkPost(item._id)\r\n//                                     }}\r\n//                                     >Fork</button>\r\n//                                 }  */}\r\n\r\n//                                 {/* <button \r\n//                                 className=\"btn\"\r\n//                                 onClick={()=>{\r\n//                                     ForkPost(item._id)\r\n//                                 }}\r\n//                                 >Fork</button>\r\n                                \r\n//                                 <button \r\n//                                 className=\"btn\"\r\n//                                 onClick={()=>{\r\n//                                     UnForkPost(item._id)\r\n//                                 }}\r\n//                                 >Un Fork</button> */}\r\n\r\n\r\n\r\n//                                 </div>\r\n//                                 {/* <h4>Previous Comments</h4> */}\r\n//                                 <div>\r\n//                                     {\r\n//                                         item.comments.map(userComment=>{\r\n//                                             // console.log(userComment)\r\n//                                             return(\r\n//                                                 <h6>\r\n//                                                     <span style={{fontWeight:\"600\"}}>{userComment.commentedBy.name}</span> {userComment.commentBody}\r\n//                                                 </h6>   \r\n//                                             )\r\n//                                         })\r\n//                                     }\r\n//                                 </div>\r\n\r\n//                                 <div>\r\n//                                     <form onSubmit={(e)=>{\r\n//                                         makeComment(e.target[0].value , item._id);\r\n//                                         e.preventDefault();     //when we submit forms, the page automatically gets reloaded\r\n//                                     }}>                         \r\n//                                         <input                  //to prevent that reloading, we have used e.preventDefault()\r\n//                                         type=\"text\"\r\n//                                         placeholder=\"comments\"\r\n//                                         />\r\n//                                     </form>\r\n//                                 </div>\r\n\r\n//                             </div>\r\n//                         )\r\n//                     })\r\n//                 }","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Navbar.js",["70","71","72","73","74"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\MainFooter.js",["75","76","77"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Footer.js",[],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Reducer.js",[],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\blog.js",["78","79","80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":41,"column":7,"nodeType":"89","endLine":41,"endColumn":15,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"91","severity":1,"message":"95","line":9,"column":11,"nodeType":"93","messageId":"94","endLine":9,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":54,"column":59,"nodeType":"98","messageId":"99","endLine":54,"endColumn":60},{"ruleId":"100","severity":1,"message":"101","line":59,"column":29,"nodeType":"102","endLine":59,"endColumn":50},{"ruleId":"91","severity":1,"message":"103","line":13,"column":12,"nodeType":"93","messageId":"94","endLine":13,"endColumn":17},{"ruleId":"91","severity":1,"message":"104","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"105","line":1,"column":28,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"106","line":1,"column":39,"nodeType":"93","messageId":"94","endLine":1,"endColumn":49},{"ruleId":"91","severity":1,"message":"107","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":14},{"ruleId":"91","severity":1,"message":"108","line":3,"column":9,"nodeType":"93","messageId":"94","endLine":3,"endColumn":20},{"ruleId":"91","severity":1,"message":"109","line":5,"column":10,"nodeType":"93","messageId":"94","endLine":5,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":24,"column":19,"nodeType":"102","endLine":24,"endColumn":55},{"ruleId":"100","severity":1,"message":"101","line":25,"column":19,"nodeType":"102","endLine":25,"endColumn":55},{"ruleId":"100","severity":1,"message":"101","line":26,"column":19,"nodeType":"102","endLine":26,"endColumn":55},{"ruleId":"91","severity":1,"message":"110","line":5,"column":10,"nodeType":"93","messageId":"94","endLine":5,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":21,"column":54,"nodeType":"102","endLine":21,"endColumn":87},{"ruleId":"111","severity":1,"message":"112","line":23,"column":21,"nodeType":"102","endLine":23,"endColumn":93},{"ruleId":"113","severity":1,"message":"114","line":30,"column":54,"nodeType":"115","endLine":30,"endColumn":74},{"ruleId":"111","severity":1,"message":"112","line":53,"column":42,"nodeType":"102","endLine":53,"endColumn":162},{"ruleId":"91","severity":1,"message":"104","line":1,"column":15,"nodeType":"93","messageId":"94","endLine":1,"endColumn":24},{"ruleId":"91","severity":1,"message":"105","line":1,"column":26,"nodeType":"93","messageId":"94","endLine":1,"endColumn":34},{"ruleId":"91","severity":1,"message":"116","line":8,"column":7,"nodeType":"93","messageId":"94","endLine":8,"endColumn":16},{"ruleId":"91","severity":1,"message":"117","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":14},{"ruleId":"91","severity":1,"message":"109","line":8,"column":10,"nodeType":"93","messageId":"94","endLine":8,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":223,"column":33,"nodeType":"102","endLine":223,"endColumn":83},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],["118"],["119"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'body', 'category', and 'title'. Either include them or remove the dependency array.","ArrayExpression",["120"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'state' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'Link' is defined but never used.","'UserContext' is defined but never used.","'Carousel' is defined but never used.","'Sidenav' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'instances' is assigned a value but never used.","'Navbar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [body, category, picurl, title]",{"range":"123","text":"124"},[1305,1313],"[body, category, picurl, title]"]