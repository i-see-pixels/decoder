[{"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\index.js":"1","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\blog.js":"2","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\landing.js":"3","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\ViewPost.js":"4","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signin.js":"5","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Navbar.js":"6","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Home.js":"7","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Reducer.js":"8","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\MainFooter.js":"9","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Footer.js":"10","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\App.js":"11","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\CreatePost.js":"12","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signup.js":"13"},{"size":508,"mtime":1608660822838,"results":"14","hashOfConfig":"15"},{"size":12557,"mtime":1608746940965,"results":"16","hashOfConfig":"15"},{"size":590,"mtime":1608570351581,"results":"17","hashOfConfig":"15"},{"size":2067,"mtime":1607337870922,"results":"18","hashOfConfig":"15"},{"size":3018,"mtime":1608745968907,"results":"19","hashOfConfig":"15"},{"size":4634,"mtime":1608734386956,"results":"20","hashOfConfig":"15"},{"size":14123,"mtime":1608636152468,"results":"21","hashOfConfig":"15"},{"size":407,"mtime":1607428250779,"results":"22","hashOfConfig":"15"},{"size":2837,"mtime":1608746711296,"results":"23","hashOfConfig":"15"},{"size":2604,"mtime":1608636152465,"results":"24","hashOfConfig":"15"},{"size":2741,"mtime":1608710242813,"results":"25","hashOfConfig":"15"},{"size":4568,"mtime":1608745873397,"results":"26","hashOfConfig":"15"},{"size":2989,"mtime":1608746005357,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1nf1v4q",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\index.js",[],["57","58"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\blog.js",["59","60","61"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\landing.js",[],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\ViewPost.js",["62"],"import react, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../Toolbar.css';\r\n\r\nfunction ViewPost()\r\n{\r\n    const {postId}=useParams();\r\n    // console.log(postId)\r\n\r\n    const [postData,setPostData]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        fetch(`/getPost/${postId}`,{\r\n            method:\"get\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            // console.log(data.likes.length)\r\n            // console.log(typeof(data.likes))\r\n            console.log(data)\r\n            setPostData(data)\r\n            // console.log(postData.comments.length)\r\n            // console.log(typeof(postData.comments))\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    },[postId])\r\n\r\n\r\n    return(\r\n        <div>\r\n            {                                               // did this so that when postData will be available\r\n                postData?                                   // only then the further components can be accessed\r\n                <div className=\"formatDedicatedPost\">                                     \r\n                    <h1>{postData.title}</h1>\r\n                    <h3>{postData.body}</h3>\r\n                    <h5>{postData.likes.length} likes</h5>\r\n                    <div>\r\n                        {\r\n                            postData.comments.map(userComment=>{\r\n                                return(\r\n                                    <h6>\r\n                                        <span style={{fontWeight:\"600\"}}>{userComment.commentedBy.name}</span> {userComment.commentBody}\r\n                                    </h6>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                :\r\n                <h1>! loading  </h1>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewPost;","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signin.js",["63"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Navbar.js",["64","65","66","67","68"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Home.js",["69","70","71","72","73","74","75","76"],"import React, { useEffect, useState , useContext} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {UserContext} from '../App'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nfunction Home()\r\n{\r\n    \r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"image\">\r\n                <img className=\"img\"src=\"https://www.awarenessdays.com/wp-content/uploads/2018/09/pride-flag.png\" alt=\"\" />      \r\n            </div>\r\n            <Carousel>\r\n                <div>\r\n                    <img src=\"https://bit.ly/2KHkuic\" />\r\n                    <p className=\"legend\">Hello</p>\r\n                    <p className=\"legend\">Mission</p>\r\n                </div>\r\n                <div>\r\n                    <img src=\"https://bit.ly/2KHkuic\" />\r\n                    <p className=\"legend\">Legend 2</p>\r\n                </div>\r\n                <div>\r\n                    <img src=\"https://bit.ly/2KHkuic\" />\r\n                    <p className=\"legend\">Legend 3</p>\r\n                </div>\r\n            </Carousel>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n// const {state,dispatch}=useContext(UserContext)\r\n//     const [allThePosts,setAllThePosts]=useState([]);\r\n//     // var flag=1;\r\n//     // console.log(state)\r\n\r\n//     useEffect(()=>{\r\n//         fetch('/allposts',{\r\n//             // method:\"get\",\r\n//             headers:{\r\n//                 \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n//             }\r\n//         })\r\n//         .then(res=>res.json())\r\n//         .then((data)=>{                         // this is an array\r\n//             // console.log(typeof(data));\r\n//             setAllThePosts(data);\r\n//         })\r\n//         .catch((err)=>{\r\n//             console.log(err);\r\n//         })\r\n//     },[])\r\n\r\n//     function LikePost(postId)\r\n//     {\r\n//         fetch('/likepost',{\r\n//             method:\"put\",\r\n//             headers:{\r\n//                 \"Content-Type\":\"application/json\",\r\n//                 \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\") \r\n//             },\r\n//             body:JSON.stringify({\r\n//                 postId,\r\n//             })\r\n//         })\r\n//         .then(res=>res.json())\r\n//         .then((data)=>{\r\n//             console.log(data);\r\n//             const newData=allThePosts.map(item=>{\r\n//                 if(item._id === data._id)\r\n//                     return data;\r\n//                 else   \r\n//                     return item;\r\n//             })\r\n\r\n//             setAllThePosts(newData);\r\n//             // flag+=1;\r\n//         })\r\n//         .catch((err)=>{\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n\r\n//     function UnlikePost(postId)\r\n//     {\r\n//         fetch('/unlikepost',{\r\n//             method:\"put\",\r\n//             headers:{\r\n//                 \"Content-Type\":\"application/json\",\r\n//                 \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n//             },\r\n//             body:JSON.stringify({\r\n//                 postId,\r\n//             })\r\n//         })\r\n//         .then(res=>res.json())\r\n//         .then((data)=>{\r\n//             console.log(data);\r\n//             const newData=allThePosts.map(item=>{\r\n//                 if(item._id === data._id)\r\n//                     return data;\r\n//                 else   \r\n//                     return item;\r\n//             })\r\n\r\n//             setAllThePosts(newData);\r\n//             // flag+=1;\r\n//         })\r\n//         .catch((err)=>{\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n\r\n//     function DeletePost(postId)\r\n//     {\r\n//         fetch(`/delete/${postId}`,{\r\n//             method:\"delete\",\r\n//             headers:{\r\n//                 \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n//             }\r\n//         })\r\n//         .then(res=>res.json())\r\n//         .then((data)=>{\r\n//             console.log(data)\r\n//             const newData=allThePosts.map(item=>{\r\n//                     if(item._id !== data._id)\r\n//                         return item\r\n//                     return data\r\n//             })\r\n//             setAllThePosts(newData);\r\n//             // flag+=1;\r\n//         })\r\n//         .catch((err)=>{\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n\r\n//     function makeComment(comment,postId)\r\n//     {\r\n//         fetch('/comment',{\r\n//             method:\"put\",\r\n//             headers:{\r\n//                 \"Content-Type\":\"application/json\",\r\n//                 \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n//             },\r\n//             body:JSON.stringify({\r\n//                 commentBody:comment,\r\n//                 postId,\r\n//             })\r\n//         })\r\n//         .then(res=>res.json())\r\n//         .then((data)=>{\r\n//             // console.log(data);\r\n//             const newData=allThePosts.map(item=>{\r\n//                 if(item._id === data._id)\r\n//                     return data\r\n//                 else    \r\n//                     return item\r\n//             })\r\n//             setAllThePosts(newData)\r\n//         })\r\n//         .catch((err)=>{\r\n//             console.log(err)\r\n//         })\r\n//     }\r\n\r\n//     function ForkPost(postId)\r\n//     {\r\n//         fetch('/forkpost',{\r\n//             method:\"put\",\r\n//             headers:{\r\n//                 \"Content-Type\":\"application/json\",\r\n//                 \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n//             },\r\n//             body:JSON.stringify({\r\n//                 postId,\r\n//             })\r\n//         })\r\n//         .then(res=>res.json())\r\n//         .then(data=>{\r\n//             // console.log(data.forkedPost)\r\n//             // console.log(\"state before \",state);\r\n//             dispatch({type:\"FORK\" , payload : data.forkedPost})\r\n//             localStorage.setItem(\"user\",JSON.stringify(data))\r\n//             // console.log(\"state after \",state);\r\n//         })\r\n//     }\r\n\r\n//     function UnForkPost(postId)\r\n//     {\r\n//         fetch('/unforkpost',{\r\n//                 method:\"put\",\r\n//                 headers:{\r\n//                     \"Content-Type\":\"application/json\",\r\n//                     \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\r\n//                 },\r\n//                 body:JSON.stringify({\r\n//                     postId,\r\n//                 })\r\n//             })\r\n//             .then(res=>res.json())\r\n//             .then(data=>{\r\n//                 // console.log(data.forkedPost)\r\n//                 dispatch({type:\"FORK\" , payload : data.forkedPost})\r\n//                 localStorage.setItem(\"user\",JSON.stringify(data))\r\n//             })\r\n//     }\r\n\r\n//                 <li><Link to=\"/categoryA\">CategoryA</Link></li>\r\n//                 <li><Link to=\"/categoryB\">CategoryB</Link></li>\r\n//                 <li><Link to=\"/categoryC\">CategoryC</Link></li>\r\n//                 {\r\n//                     allThePosts.map(item=>{\r\n//                         return(\r\n//                             // console.log(item),\r\n\r\n//                             // body: \"d\"\r\n//                             // category: \"C\"\r\n//                             // comments: []\r\n//                             // likes: []\r\n//                             // pic: \"C:\\fakepath\\wallhaven-42qee6_1366x768.png\"\r\n//                             // postedby: {_id: \"5fc9dbfa24626d26b8296d32\", name: \"y\"}\r\n//                             // title: \"d\"\r\n//                             // __v: 0\r\n//                             // _id: \"5fc9e12024626d26b8296d33\"\r\n//                             // __proto__: Object\r\n\r\n//                             <div className=\"card\">\r\n//                                 <Link to={\"/viewpost/\" + item._id }><h2>{item.title}</h2></Link>\r\n//                                 {/* <h2>{item._id}</h2> */}\r\n//                                 <h2>{item.body}</h2>\r\n//                                 <h4>{item.likes.length} likes</h4>\r\n\r\n//                                 <div>\r\n//                                 {\r\n//                                     item.likes.includes(state._id)\r\n//                                     ?\r\n//                                         <button \r\n//                                         className=\"btn\"\r\n//                                         onClick={()=>{\r\n//                                             UnlikePost(item._id)\r\n//                                         }}\r\n//                                         >Unlike</button>\r\n//                                     :\r\n//                                         <button \r\n//                                         className=\"btn\"\r\n//                                         onClick={()=>{\r\n//                                             LikePost(item._id)\r\n//                                         }}\r\n//                                         >Like</button>\r\n\r\n//                                 }\r\n\r\n//                                 {\r\n//                                     item.postedby._id === state._id\r\n//                                     &&\r\n//                                     <button \r\n//                                     className=\"btn\"\r\n//                                     onClick={()=>{\r\n//                                     DeletePost(item._id)\r\n//                                     }}\r\n//                                     >Delete</button>\r\n//                                 }\r\n    \r\n//                                 {\r\n                                    \r\n//                                     state\r\n//                                     ?\r\n//                                         // \r\n//                                         state.forkedPost.some(({_id})=>_id === item._id)\r\n//                                         ?\r\n//                                         <button \r\n//                                         className=\"btn\"\r\n//                                         onClick={()=>{\r\n//                                             // console.log(\"yes\");\r\n//                                             UnForkPost(item._id)\r\n//                                         }}\r\n//                                         >UnFork</button>\r\n//                                         :\r\n//                                         <button \r\n//                                         className=\"btn\"\r\n//                                         onClick={()=>{\r\n//                                             ForkPost(item._id)\r\n//                                         }}\r\n//                                         >Fork</button>\r\n\r\n//                                     :\r\n\r\n//                                     <h5> loading </h5>\r\n\r\n//                                 }\r\n\r\n//                                 {/* {\r\n//                                     state.forkedPost.includes(item._id)\r\n//                                     ?\r\n//                                     <button \r\n//                                     className=\"btn\"\r\n//                                     onClick={()=>{\r\n//                                         UnForkPost(item._id)\r\n//                                     }}\r\n//                                     >UnFork</button>\r\n//                                     :\r\n//                                     <button \r\n//                                     className=\"btn\"\r\n//                                     onClick={()=>{\r\n//                                         ForkPost(item._id)\r\n//                                     }}\r\n//                                     >Fork</button>\r\n//                                 }  */}\r\n\r\n//                                 {/* <button \r\n//                                 className=\"btn\"\r\n//                                 onClick={()=>{\r\n//                                     ForkPost(item._id)\r\n//                                 }}\r\n//                                 >Fork</button>\r\n                                \r\n//                                 <button \r\n//                                 className=\"btn\"\r\n//                                 onClick={()=>{\r\n//                                     UnForkPost(item._id)\r\n//                                 }}\r\n//                                 >Un Fork</button> */}\r\n\r\n\r\n\r\n//                                 </div>\r\n//                                 {/* <h4>Previous Comments</h4> */}\r\n//                                 <div>\r\n//                                     {\r\n//                                         item.comments.map(userComment=>{\r\n//                                             // console.log(userComment)\r\n//                                             return(\r\n//                                                 <h6>\r\n//                                                     <span style={{fontWeight:\"600\"}}>{userComment.commentedBy.name}</span> {userComment.commentBody}\r\n//                                                 </h6>   \r\n//                                             )\r\n//                                         })\r\n//                                     }\r\n//                                 </div>\r\n\r\n//                                 <div>\r\n//                                     <form onSubmit={(e)=>{\r\n//                                         makeComment(e.target[0].value , item._id);\r\n//                                         e.preventDefault();     //when we submit forms, the page automatically gets reloaded\r\n//                                     }}>                         \r\n//                                         <input                  //to prevent that reloading, we have used e.preventDefault()\r\n//                                         type=\"text\"\r\n//                                         placeholder=\"comments\"\r\n//                                         />\r\n//                                     </form>\r\n//                                 </div>\r\n\r\n//                             </div>\r\n//                         )\r\n//                     })\r\n//                 }","C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Reducer.js",[],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\MainFooter.js",["77","78","79"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\Footer.js",[],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\App.js",["80"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\CreatePost.js",["81"],"C:\\Users\\User\\Documents\\Web Development\\d_coder\\client\\src\\screens\\Signup.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":14},{"ruleId":"86","severity":1,"message":"90","line":8,"column":10,"nodeType":"88","messageId":"89","endLine":8,"endColumn":18},{"ruleId":"91","severity":1,"message":"92","line":218,"column":33,"nodeType":"93","endLine":218,"endColumn":54},{"ruleId":"86","severity":1,"message":"94","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"95","line":13,"column":12,"nodeType":"88","messageId":"89","endLine":13,"endColumn":17},{"ruleId":"96","severity":1,"message":"97","line":22,"column":54,"nodeType":"93","endLine":22,"endColumn":87},{"ruleId":"96","severity":1,"message":"97","line":24,"column":21,"nodeType":"93","endLine":24,"endColumn":93},{"ruleId":"96","severity":1,"message":"97","line":31,"column":54,"nodeType":"93","endLine":31,"endColumn":87},{"ruleId":"98","severity":1,"message":"99","line":32,"column":54,"nodeType":"100","endLine":32,"endColumn":74},{"ruleId":"96","severity":1,"message":"97","line":55,"column":42,"nodeType":"93","endLine":55,"endColumn":162},{"ruleId":"86","severity":1,"message":"101","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"102","line":1,"column":28,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"103","line":1,"column":39,"nodeType":"88","messageId":"89","endLine":1,"endColumn":49},{"ruleId":"86","severity":1,"message":"104","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":14},{"ruleId":"86","severity":1,"message":"105","line":3,"column":9,"nodeType":"88","messageId":"89","endLine":3,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":17,"column":21,"nodeType":"93","endLine":17,"endColumn":57},{"ruleId":"91","severity":1,"message":"92","line":22,"column":21,"nodeType":"93","endLine":22,"endColumn":57},{"ruleId":"91","severity":1,"message":"92","line":26,"column":21,"nodeType":"93","endLine":26,"endColumn":57},{"ruleId":"86","severity":1,"message":"101","line":1,"column":15,"nodeType":"88","messageId":"89","endLine":1,"endColumn":24},{"ruleId":"86","severity":1,"message":"102","line":1,"column":26,"nodeType":"88","messageId":"89","endLine":1,"endColumn":34},{"ruleId":"86","severity":1,"message":"106","line":8,"column":7,"nodeType":"88","messageId":"89","endLine":8,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":45,"column":5,"nodeType":"109","endLine":45,"endColumn":7,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"111","line":37,"column":7,"nodeType":"109","endLine":37,"endColumn":15,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Carousel' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'react' is defined but never used.","'state' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'Link' is defined but never used.","'UserContext' is defined but never used.","'instances' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'state'. Either include them or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has missing dependencies: 'body', 'category', and 'title'. Either include them or remove the dependency array.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [dispatch, history, state]",{"range":"121","text":"122"},"Update the dependencies array to be: [body, category, picurl, title]",{"range":"123","text":"124"},[1501,1503],"[dispatch, history, state]",[1185,1193],"[body, category, picurl, title]"]